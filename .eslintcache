[{"E:\\kiran\\ecommerce-front\\src\\App.js":"1","E:\\kiran\\ecommerce-front\\src\\index.js":"2","E:\\kiran\\ecommerce-front\\src\\user\\Signup.js":"3","E:\\kiran\\ecommerce-front\\src\\user\\Signin.js":"4","E:\\kiran\\ecommerce-front\\src\\Routes.js":"5","E:\\kiran\\ecommerce-front\\src\\core\\Home.js":"6","E:\\kiran\\ecommerce-front\\src\\core\\Menu.js":"7","E:\\kiran\\ecommerce-front\\src\\core\\Layout.js":"8","E:\\kiran\\ecommerce-front\\src\\auth\\index.js":"9","E:\\kiran\\ecommerce-front\\src\\config.js":"10","E:\\kiran\\ecommerce-front\\src\\auth\\PrivateRoute.js":"11","E:\\kiran\\ecommerce-front\\src\\user\\UserDashboard.js":"12","E:\\kiran\\ecommerce-front\\src\\auth\\AdminRoute.js":"13","E:\\kiran\\ecommerce-front\\src\\user\\AdminDashboard.js":"14","E:\\kiran\\ecommerce-front\\src\\admin\\apiAdmin.js":"15","E:\\kiran\\ecommerce-front\\src\\admin\\AddProduct.js":"16","E:\\kiran\\ecommerce-front\\src\\core\\apiCore.js":"17","E:\\kiran\\ecommerce-front\\src\\core\\Card.js":"18","E:\\kiran\\ecommerce-front\\src\\core\\Search.js":"19","E:\\kiran\\ecommerce-front\\src\\core\\ShowImage.js":"20","E:\\kiran\\ecommerce-front\\src\\core\\cartHelpers.js":"21","E:\\kiran\\ecommerce-front\\src\\admin\\AddCategory.js":"22","E:\\kiran\\ecommerce-front\\src\\core\\Shop.js":"23","E:\\kiran\\ecommerce-front\\src\\core\\Checkbox.js":"24","E:\\kiran\\ecommerce-front\\src\\core\\fixedPrices.js":"25","E:\\kiran\\ecommerce-front\\src\\core\\RadioBox.js":"26","E:\\kiran\\ecommerce-front\\src\\core\\Product.js":"27","E:\\kiran\\ecommerce-front\\src\\core\\Cart.js":"28","E:\\kiran\\ecommerce-front\\src\\core\\Checkout.js":"29","E:\\kiran\\ecommerce-front\\src\\admin\\Orders.js":"30","E:\\kiran\\ecommerce-front\\src\\user\\Profile.js":"31","E:\\kiran\\ecommerce-front\\src\\user\\apiUser.js":"32","E:\\kiran\\ecommerce-front\\src\\admin\\ManageProducts.js":"33","E:\\kiran\\ecommerce-front\\src\\admin\\UpdateProduct.js":"34"},{"size":149,"mtime":1606381952475,"results":"35","hashOfConfig":"36"},{"size":207,"mtime":1606383087797,"results":"37","hashOfConfig":"36"},{"size":2800,"mtime":1606393746148,"results":"38","hashOfConfig":"36"},{"size":3219,"mtime":1606393994977,"results":"39","hashOfConfig":"36"},{"size":2121,"mtime":1606571673052,"results":"40","hashOfConfig":"36"},{"size":1977,"mtime":1606481558573,"results":"41","hashOfConfig":"36"},{"size":3793,"mtime":1606545130728,"results":"42","hashOfConfig":"36"},{"size":450,"mtime":1606461826528,"results":"43","hashOfConfig":"36"},{"size":1669,"mtime":1606392267131,"results":"44","hashOfConfig":"36"},{"size":50,"mtime":1606389065907,"results":"45","hashOfConfig":"36"},{"size":627,"mtime":1606396268148,"results":"46","hashOfConfig":"36"},{"size":4148,"mtime":1606396875650,"results":"47","hashOfConfig":"36"},{"size":662,"mtime":1606402478117,"results":"48","hashOfConfig":"36"},{"size":2399,"mtime":1606402288150,"results":"49","hashOfConfig":"36"},{"size":4636,"mtime":1606403494664,"results":"50","hashOfConfig":"36"},{"size":5573,"mtime":1606403494622,"results":"51","hashOfConfig":"36"},{"size":3393,"mtime":1606406770895,"results":"52","hashOfConfig":"36"},{"size":3585,"mtime":1606575080824,"results":"53","hashOfConfig":"36"},{"size":3904,"mtime":1606407160696,"results":"54","hashOfConfig":"36"},{"size":381,"mtime":1606407202567,"results":"55","hashOfConfig":"36"},{"size":2481,"mtime":1606407282013,"results":"56","hashOfConfig":"36"},{"size":2511,"mtime":1606403494595,"results":"57","hashOfConfig":"36"},{"size":4409,"mtime":1606462163220,"results":"58","hashOfConfig":"36"},{"size":1187,"mtime":1606462579039,"results":"59","hashOfConfig":"36"},{"size":498,"mtime":1606464031539,"results":"60","hashOfConfig":"36"},{"size":635,"mtime":1606464258698,"results":"61","hashOfConfig":"36"},{"size":1841,"mtime":1606541819878,"results":"62","hashOfConfig":"36"},{"size":1801,"mtime":1606544913784,"results":"63","hashOfConfig":"36"},{"size":6293,"mtime":1606548360330,"results":"64","hashOfConfig":"36"},{"size":6102,"mtime":1606403494637,"results":"65","hashOfConfig":"36"},{"size":2961,"mtime":1606570002688,"results":"66","hashOfConfig":"36"},{"size":1617,"mtime":1606570343809,"results":"67","hashOfConfig":"36"},{"size":2488,"mtime":1606403494631,"results":"68","hashOfConfig":"36"},{"size":6605,"mtime":1606403494651,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1meijh0",{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"94"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"94"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"85"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"77"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"77"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"94"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"77"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"152","messages":"153","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\kiran\\ecommerce-front\\src\\App.js",[],"E:\\kiran\\ecommerce-front\\src\\index.js",[],["154","155"],"E:\\kiran\\ecommerce-front\\src\\user\\Signup.js",[],["156","157"],"E:\\kiran\\ecommerce-front\\src\\user\\Signin.js",[],"E:\\kiran\\ecommerce-front\\src\\Routes.js",[],"E:\\kiran\\ecommerce-front\\src\\core\\Home.js",["158"],"import React, { useState, useEffect } from 'react';\r\nimport Layout from './Layout';\r\nimport { getProducts } from './apiCore';\r\nimport Card from './Card';\r\nimport Search from './Search';\r\n\r\nconst Home = () => {\r\n    const [productsBySell, setProductsBySell] = useState([]);\r\n    const [productsByArrival, setProductsByArrival] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n    const loadProductsBySell = () => {\r\n        getProducts('sold').then(data => {\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProductsBySell(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const loadProductsByArrival = () => {\r\n        getProducts('createdAt').then(data => {\r\n            console.log(data);\r\n            if (data.error) {\r\n                setError(data.error);\r\n            } else {\r\n                setProductsByArrival(data);\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        loadProductsByArrival();\r\n        loadProductsBySell();\r\n    }, []);\r\n\r\n    return (\r\n        <Layout\r\n            title=\"FullStack React Node MongoDB Ecommerce App\"\r\n            description=\"Node React E-commerce App\"\r\n            className=\"container-fluid\"\r\n        >\r\n           { <Search />}\r\n            <h2 className=\"mb-4\">New Arrivals</h2>\r\n            <div className=\"row\">\r\n                {productsByArrival.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n\r\n            <h2 className=\"mb-4\">Best Sellers</h2>\r\n            <div className=\"row\">\r\n                {productsBySell.map((product, i) => (\r\n                    <div key={i} className=\"col-4 mb-3\">\r\n                        <Card product={product} />\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Home;",["159","160"],"E:\\kiran\\ecommerce-front\\src\\core\\Menu.js",[],"E:\\kiran\\ecommerce-front\\src\\core\\Layout.js",[],"E:\\kiran\\ecommerce-front\\src\\auth\\index.js",[],"E:\\kiran\\ecommerce-front\\src\\config.js",[],["161","162"],"E:\\kiran\\ecommerce-front\\src\\auth\\PrivateRoute.js",["163"],"import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default PrivateRoute;","E:\\kiran\\ecommerce-front\\src\\user\\UserDashboard.js",["164","165"],"import React, { useState, useEffect } from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n//import { getPurchaseHistory } from \"./apiUser\";\r\n//import moment from \"moment\";\r\n\r\nconst Dashboard = () => {\r\n    const [history, setHistory] = useState([]);\r\n\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n    const token = isAuthenticated().token;\r\n\r\n    const init = (userId, token) => {\r\n        // getPurchaseHistory(userId, token).then(data => {\r\n        //     if (data.error) {\r\n        //         console.log(data.error);\r\n        //     } else {\r\n        //         setHistory(data);\r\n        //     }\r\n        // });\r\n    };\r\n\r\n    useEffect(() => {\r\n        init(_id, token);\r\n    }, []);\r\n\r\n    const userLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">User Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/cart\">\r\n                            My Cart\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to={`/profile/${_id}`}>\r\n                            Update Profile\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const userInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const purchaseHistory = history => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">Purchase history</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        {history.map((h, i) => {\r\n                            return (\r\n                                <div>\r\n                                    <hr />\r\n                                    {h.products.map((p, i) => {\r\n                                        return (\r\n                                            <div key={i}>\r\n                                                <h6>Product name: {p.name}</h6>\r\n                                                <h6>\r\n                                                    Product price: ${p.price}\r\n                                                </h6>\r\n                                                <h6>\r\n                                                    Purchased date:{\" \"}\r\n                                                    {/* {moment(\r\n                                                        p.createdAt\r\n                                                    ).fromNow()} */}\r\n                                                </h6>\r\n                                            </div>\r\n                                        );\r\n                                    })}\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{userLinks()}</div>\r\n                <div className=\"col-9\">\r\n                    {userInfo()}\r\n                    {purchaseHistory(history)}\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default Dashboard;","E:\\kiran\\ecommerce-front\\src\\auth\\AdminRoute.js",["166"],"import React, { Component } from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { isAuthenticated } from \"./index\";\r\n\r\nconst AdminRoute = ({ component: Component, ...rest }) => (\r\n    <Route\r\n        {...rest}\r\n        render={props =>\r\n            isAuthenticated() && isAuthenticated().user.role === 1 ? (\r\n                <Component {...props} />\r\n            ) : (\r\n                <Redirect\r\n                    to={{\r\n                        pathname: \"/signin\",\r\n                        state: { from: props.location }\r\n                    }}\r\n                />\r\n            )\r\n        }\r\n    />\r\n);\r\n\r\nexport default AdminRoute;\r\n","E:\\kiran\\ecommerce-front\\src\\user\\AdminDashboard.js",["167"],"import React from \"react\";\r\nimport Layout from \"../core/Layout\";\r\nimport { isAuthenticated } from \"../auth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst AdminDashboard = () => {\r\n    const {\r\n        user: { _id, name, email, role }\r\n    } = isAuthenticated();\r\n\r\n    const adminLinks = () => {\r\n        return (\r\n            <div className=\"card\">\r\n                <h4 className=\"card-header\">Admin Links</h4>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/category\">\r\n                            Create Category\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/create/product\">\r\n                            Create Product\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/orders\">\r\n                            View Orders\r\n                        </Link>\r\n                    </li>\r\n                    <li className=\"list-group-item\">\r\n                        <Link className=\"nav-link\" to=\"/admin/products\">\r\n                            Manage Products\r\n                        </Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const adminInfo = () => {\r\n        return (\r\n            <div className=\"card mb-5\">\r\n                <h3 className=\"card-header\">User Information</h3>\r\n                <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{name}</li>\r\n                    <li className=\"list-group-item\">{email}</li>\r\n                    <li className=\"list-group-item\">\r\n                        {role === 1 ? \"Admin\" : \"Registered User\"}\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Layout\r\n            title=\"Dashboard\"\r\n            description={`G'day ${name}!`}\r\n            className=\"container-fluid\"\r\n        >\r\n            <div className=\"row\">\r\n                <div className=\"col-3\">{adminLinks()}</div>\r\n                <div className=\"col-9\">{adminInfo()}</div>\r\n            </div>\r\n        </Layout>\r\n    );\r\n};\r\n\r\nexport default AdminDashboard;","E:\\kiran\\ecommerce-front\\src\\admin\\apiAdmin.js",[],"E:\\kiran\\ecommerce-front\\src\\admin\\AddProduct.js",["168","169","170","171","172"],"import React, { useState, useEffect } from 'react';\nimport Layout from '../core/Layout';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom';\nimport { createProduct, getCategories } from './apiAdmin';\n\nconst AddProduct = () => {\n    const [values, setValues] = useState({\n        name: '',\n        description: '',\n        price: '',\n        categories: [],\n        category: '',\n        shipping: '',\n        quantity: '',\n        photo: '',\n        loading: false,\n        error: '',\n        createdProduct: '',\n        redirectToProfile: false,\n        formData: ''\n    });\n\n    const { user, token } = isAuthenticated();\n    const {\n        name,\n        description,\n        price,\n        categories,\n        category,\n        shipping,\n        quantity,\n        loading,\n        error,\n        createdProduct,\n        redirectToProfile,\n        formData\n    } = values;\n\n    // load categories and set form data\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    categories: data,\n                    formData: new FormData()\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        init();\n    }, []);\n\n    const handleChange = name => event => {\n        const value = name === 'photo' ? event.target.files[0] : event.target.value;\n        formData.set(name, value);\n        setValues({ ...values, [name]: value });\n    };\n\n    const clickSubmit = event => {\n        event.preventDefault();\n        setValues({ ...values, error: '', loading: true });\n\n        createProduct(user._id, token, formData).then(data => {\n            if (data.error) {\n                setValues({ ...values, error: data.error });\n            } else {\n                setValues({\n                    ...values,\n                    name: '',\n                    description: '',\n                    photo: '',\n                    price: '',\n                    quantity: '',\n                    loading: false,\n                    createdProduct: data.name\n                });\n            }\n        });\n    };\n\n    const newPostForm = () => (\n        <form className=\"mb-3\" onSubmit={clickSubmit}>\n            <h4>Post Photo</h4>\n            <div className=\"form-group\">\n                <label className=\"btn btn-secondary\">\n                    <input onChange={handleChange('photo')} type=\"file\" name=\"photo\" accept=\"image/*\" />\n                </label>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={handleChange('name')} type=\"text\" className=\"form-control\" value={name} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Description</label>\n                <textarea onChange={handleChange('description')} className=\"form-control\" value={description} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Price</label>\n                <input onChange={handleChange('price')} type=\"number\" className=\"form-control\" value={price} />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Category</label>\n                <select onChange={handleChange('category')} className=\"form-control\">\n                    <option>Please select</option>\n                    {categories &&\n                        categories.map((c, i) => (\n                            <option key={i} value={c._id}>\n                                {c.name}\n                            </option>\n                        ))}\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Shipping</label>\n                <select onChange={handleChange('shipping')} className=\"form-control\">\n                    <option>Please select</option>\n                    <option value=\"0\">No</option>\n                    <option value=\"1\">Yes</option>\n                </select>\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Quantity</label>\n                <input onChange={handleChange('quantity')} type=\"number\" className=\"form-control\" value={quantity} />\n            </div>\n\n            <button className=\"btn btn-outline-primary\">Create Product</button>\n        </form>\n    );\n\n    const showError = () => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = () => (\n        <div className=\"alert alert-info\" style={{ display: createdProduct ? '' : 'none' }}>\n            <h2>{`${createdProduct}`} is created!</h2>\n        </div>\n    );\n\n    const showLoading = () =>\n        loading && (\n            <div className=\"alert alert-success\">\n                <h2>Loading...</h2>\n            </div>\n        );\n\n    return (\n        <Layout title=\"Add a new product\" description={`G'day ${user.name}, ready to add a new product?`}>\n            <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                    {showLoading()}\n                    {showSuccess()}\n                    {showError()}\n                    {newPostForm()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default AddProduct;\n","E:\\kiran\\ecommerce-front\\src\\core\\apiCore.js",[],"E:\\kiran\\ecommerce-front\\src\\core\\Card.js",[],"E:\\kiran\\ecommerce-front\\src\\core\\Search.js",[],["173","174"],"E:\\kiran\\ecommerce-front\\src\\core\\ShowImage.js",[],"E:\\kiran\\ecommerce-front\\src\\core\\cartHelpers.js",["175","176"],"export const addItem = (item = [], count = 0, next = f => f) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n        cart.push({\n            ...item,\n            count: 1\n        });\n\n        // remove duplicates\n        // build an Array from new Set and turn it back into array using Array.from\n        // so that later we can re-map it\n        // new set will only allow unique values in it\n        // so pass the ids of each object/product\n        // If the loop tries to add the same value again, it'll get ignored\n        // ...with the array of ids we got on when first map() was used\n        // run map() on it again and return the actual product from the cart\n\n        cart = Array.from(new Set(cart.map(p => p._id))).map(id => {\n            return cart.find(p => p._id === id);\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n        next();\n    }\n};\n\nexport const itemTotal = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart')).length;\n        }\n    }\n    return 0;\n};\n\nexport const getCart = () => {\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            return JSON.parse(localStorage.getItem('cart'));\n        }\n    }\n    return [];\n};\n\nexport const updateItem = (productId, count) => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart[i].count = count;\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n};\n\nexport const removeItem = productId => {\n    let cart = [];\n    if (typeof window !== 'undefined') {\n        if (localStorage.getItem('cart')) {\n            cart = JSON.parse(localStorage.getItem('cart'));\n        }\n\n        cart.map((product, i) => {\n            if (product._id === productId) {\n                cart.splice(i, 1);\n            }\n        });\n\n        localStorage.setItem('cart', JSON.stringify(cart));\n    }\n    return cart;\n};\n\nexport const emptyCart = next => {\n    if (typeof window !== 'undefined') {\n        localStorage.removeItem('cart');\n        next();\n    }\n};\n","E:\\kiran\\ecommerce-front\\src\\admin\\AddCategory.js",[],"E:\\kiran\\ecommerce-front\\src\\core\\Shop.js",["177","178","179"],"import React, { useState, useEffect } from \"react\";\nimport Layout from \"./Layout\";\nimport Card from \"./Card\";\nimport { getCategories, getFilteredProducts } from \"./apiCore\";\nimport Checkbox from \"./Checkbox\";\nimport RadioBox from \"./RadioBox\";\nimport { prices } from \"./fixedPrices\";\n\nconst Shop = () => {\n    const [myFilters, setMyFilters] = useState({\n        filters: { category: [], price: [] }\n    });\n    const [categories, setCategories] = useState([]);\n    const [error, setError] = useState(false);\n    const [limit, setLimit] = useState(6);\n    const [skip, setSkip] = useState(0);\n    const [size, setSize] = useState(0);\n    const [filteredResults, setFilteredResults] = useState([]);\n\n    const init = () => {\n        getCategories().then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setCategories(data);\n            }\n        });\n    };\n\n    const loadFilteredResults = newFilters => {\n        // console.log(newFilters);\n        getFilteredProducts(skip, limit, newFilters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults(data.data);\n                setSize(data.size);\n                setSkip(0);\n            }\n        });\n    };\n\n    const loadMore = () => {\n        let toSkip = skip + limit;\n        // console.log(newFilters);\n        getFilteredProducts(toSkip, limit, myFilters.filters).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setFilteredResults([...filteredResults, ...data.data]);\n                setSize(data.size);\n                setSkip(toSkip);\n            }\n        });\n    };\n\n    const loadMoreButton = () => {\n        return (\n            size > 0 &&\n            size >= limit && (\n                <button onClick={loadMore} className=\"btn btn-warning mb-5\">\n                    Load more\n                </button>\n            )\n        );\n    };\n\n    useEffect(() => {\n        init();\n        loadFilteredResults(skip, limit, myFilters.filters);\n    }, []);\n\n    const handleFilters = (filters, filterBy) => {\n        // console.log(\"SHOP\", filters, filterBy);\n        const newFilters = { ...myFilters };\n        newFilters.filters[filterBy] = filters;\n\n        if (filterBy === \"price\") {\n            let priceValues = handlePrice(filters);\n            newFilters.filters[filterBy] = priceValues;\n        }\n        loadFilteredResults(myFilters.filters);\n        setMyFilters(newFilters);\n    };\n\n    const handlePrice = value => {\n        const data = prices;\n        let array = [];\n\n        for (let key in data) {\n            if (data[key]._id === parseInt(value)) {\n                array = data[key].array;\n            }\n        }\n        return array;\n    };\n\n    return (\n        <Layout\n            title=\"Shop Page\"\n            description=\"Search and find books of your choice\"\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-4\">\n                    <h4>Filter by categories</h4>\n                    <ul>\n                        <Checkbox\n                            categories={categories}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"category\")\n                            }\n                        />\n                    </ul>\n\n                    <h4>Filter by price range</h4>\n                    <div>\n                        <RadioBox\n                            prices={prices}\n                            handleFilters={filters =>\n                                handleFilters(filters, \"price\")\n                            }\n                        />\n                    </div>\n                </div>\n\n                <div className=\"col-8\">\n                    <h2 className=\"mb-4\">Products</h2>\n                    <div className=\"row\">\n                        {filteredResults.map((product, i) => (\n                            <div key={i} className=\"col-4 mb-3\">\n                                <Card product={product} />\n                            </div>\n                        ))}\n                    </div>\n                    <hr />\n                    {loadMoreButton()}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Shop;\n","E:\\kiran\\ecommerce-front\\src\\core\\Checkbox.js",[],"E:\\kiran\\ecommerce-front\\src\\core\\fixedPrices.js",[],"E:\\kiran\\ecommerce-front\\src\\core\\RadioBox.js",["180"],"import React, { useState } from \"react\";\n\nconst RadioBox = ({ prices, handleFilters }) => {\n    const [value, setValue] = useState(0);\n\n    const handleChange = event => {\n        handleFilters(event.target.value);\n        setValue(event.target.value);\n    };\n\n    return prices.map((p, i) => (\n        <div key={i}>\n            <input\n                onChange={handleChange}\n                value={`${p._id}`}\n                name={p}\n                type=\"radio\"\n                className=\"mr-2 ml-4\"\n            />\n            <label className=\"form-check-label\">{p.name}</label>\n        </div>\n    ));\n};\n\nexport default RadioBox;\n","E:\\kiran\\ecommerce-front\\src\\core\\Product.js",["181"],"import React, { useState, useEffect } from 'react';\nimport Layout from './Layout';\nimport { read, listRelated } from './apiCore';\nimport Card from './Card';\n\nconst Product = props => {\n    const [product, setProduct] = useState({});\n    const [relatedProduct, setRelatedProduct] = useState([]);\n    const [error, setError] = useState(false);\n\n    const loadSingleProduct = productId => {\n        read(productId).then(data => {\n            if (data.error) {\n                setError(data.error);\n            } else {\n                setProduct(data);\n                // fetch related products\n                listRelated(data._id).then(data => {\n                    if (data.error) {\n                        setError(data.error);\n                    } else {\n                        setRelatedProduct(data);\n                    }\n                });\n            }\n        });\n    };\n\n    useEffect(() => {\n        const productId = props.match.params.productId;\n        loadSingleProduct(productId);\n    }, [props]);\n\n    return (\n        <Layout\n            title={product && product.name}\n            description={product && product.description && product.description.substring(0, 100)}\n            className=\"container-fluid\"\n        >\n            <div className=\"row\">\n                <div className=\"col-8\">\n                    {product && product.description && <Card product={product} showViewProductButton={false} />}\n                </div>\n\n                <div className=\"col-4\">\n                    <h4>Related products</h4>\n                    {relatedProduct.map((p, i) => (\n                        <div className=\"mb-3\" key={i}>\n                            <Card product={p} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </Layout>\n    );\n};\n\nexport default Product;\n","E:\\kiran\\ecommerce-front\\src\\core\\Cart.js",[],"E:\\kiran\\ecommerce-front\\src\\core\\Checkout.js",["182","183","184","185"],"import React, { useState, useEffect } from 'react';\nimport { getProducts, getBraintreeClientToken, processPayment, createOrder } from './apiCore';\nimport { emptyCart } from './cartHelpers';\nimport Card from './Card';\nimport { isAuthenticated } from '../auth';\nimport { Link } from 'react-router-dom'; \n// import \"braintree-web\"; // not using this package\nimport DropIn from 'braintree-web-drop-in-react';\n\nconst Checkout = ({ products, setRun = f => f, run = undefined }) => {\n    const [data, setData] = useState({\n        loading: false,\n        success: false,\n        clientToken: null,\n        error: '',\n        instance: {},\n        address: ''\n    });\n\n    const userId = isAuthenticated() && isAuthenticated().user._id;\n    const token = isAuthenticated() && isAuthenticated().token;\n\n    const getToken = (userId, token) => {\n        getBraintreeClientToken(userId, token).then(data => {\n            if (data.error) {\n                console.log(data.error);\n                setData({ ...data, error: data.error });\n            } else {\n                console.log(data);\n                setData({ clientToken: data.clientToken });\n            }\n        });\n    };\n\n    useEffect(() => {\n        getToken(userId, token);\n    }, []);\n\n    const handleAddress = event => {\n        setData({ ...data, address: event.target.value });\n    };\n\n    const getTotal = () => {\n        return products.reduce((currentValue, nextValue) => {\n            return currentValue + nextValue.count * nextValue.price;\n        }, 0);\n    };\n\n    const showCheckout = () => {\n        return isAuthenticated() ? (\n            <div>{showDropIn()}</div>\n        ) : (\n            <Link to=\"/signin\">\n                <button className=\"btn btn-primary\">Sign in to checkout</button>\n            </Link>\n        );\n    };\n\n    let deliveryAddress = data.address;\n\n    const buy = () => {\n        setData({ loading: true });\n        // send the nonce to your server\n        // nonce = data.instance.requestPaymentMethod()\n        let nonce;\n        let getNonce = data.instance\n            .requestPaymentMethod()\n            .then(data => {\n                // console.log(data);\n                nonce = data.nonce;\n                // once you have nonce (card type, card number) send nonce as 'paymentMethodNonce'\n                // and also total to be charged\n                // console.log(\n                //     \"send nonce and total to process: \",\n                //     nonce,\n                //     getTotal(products)\n                // );\n                const paymentData = {\n                    paymentMethodNonce: nonce,\n                    amount: getTotal(products)\n                };\n\n                processPayment(userId, token, paymentData)\n                    .then(response => {\n                        console.log(response);\n                        // empty cart\n                        // create order\n\n                        const createOrderData = {\n                            products: products,\n                            transaction_id: response.transaction.id,\n                            amount: response.transaction.amount,\n                            address: deliveryAddress\n                        };\n\n                        createOrder(userId, token, createOrderData)\n                            .then(response => {\n                                emptyCart(() => {\n                                    setRun(!run); // run useEffect in parent Cart\n                                    console.log('payment success and empty cart');\n                                    setData({\n                                        loading: false,\n                                        success: true\n                                    });\n                                });\n                            })\n                            .catch(error => {\n                                console.log(error);\n                                setData({ loading: false });\n                            });\n                    })\n                    .catch(error => {\n                        console.log(error);\n                        setData({ loading: false });\n                    });\n            })\n            .catch(error => {\n                // console.log(\"dropin error: \", error);\n                setData({ ...data, error: error.message });\n            });\n    };\n\n    const showDropIn = () => (\n        <div onBlur={() => setData({ ...data, error: '' })}>\n            {data.clientToken !== null && products.length > 0 ? (\n                <div>\n                    <div className=\"gorm-group mb-3\">\n                        <label className=\"text-muted\">Delivery address:</label>\n                        <textarea\n                            onChange={handleAddress}\n                            className=\"form-control\"\n                            value={data.address}\n                            placeholder=\"Type your delivery address here...\"\n                        />\n                    </div>\n\n                    <DropIn\n                        options={{\n                            authorization: data.clientToken,\n                            paypal: {\n                                flow: 'vault'\n                            }\n                        }}\n                        onInstance={instance => (data.instance = instance)}\n                    />\n                    <button onClick={buy} className=\"btn btn-success btn-block\">\n                        Pay\n                    </button>\n                </div>\n            ) : null}\n        </div>\n    );\n\n    const showError = error => (\n        <div className=\"alert alert-danger\" style={{ display: error ? '' : 'none' }}>\n            {error}\n        </div>\n    );\n\n    const showSuccess = success => (\n        <div className=\"alert alert-info\" style={{ display: success ? '' : 'none' }}>\n            Thanks! Your payment was successful!\n        </div>\n    );\n\n    const showLoading = loading => loading && <h2 className=\"text-danger\">Loading...</h2>;\n\n    return (\n        <div>\n            <h2>Total: ${getTotal()}</h2>\n            {showLoading(data.loading)}\n            {showSuccess(data.success)}\n            {showError(data.error)}\n            {showCheckout()}\n        </div>\n    );\n};\n\nexport default Checkout;\n","E:\\kiran\\ecommerce-front\\src\\admin\\Orders.js",["186","187"],"E:\\kiran\\ecommerce-front\\src\\user\\Profile.js",["188","189","190"],"E:\\kiran\\ecommerce-front\\src\\user\\apiUser.js",[],"E:\\kiran\\ecommerce-front\\src\\admin\\ManageProducts.js",[],"E:\\kiran\\ecommerce-front\\src\\admin\\UpdateProduct.js",["191","192","193","194"],{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","replacedBy":"198"},{"ruleId":"195","replacedBy":"199"},{"ruleId":"197","replacedBy":"200"},{"ruleId":"201","severity":1,"message":"202","line":10,"column":12,"nodeType":"203","messageId":"204","endLine":10,"endColumn":17},{"ruleId":"195","replacedBy":"205"},{"ruleId":"197","replacedBy":"206"},{"ruleId":"195","replacedBy":"207"},{"ruleId":"197","replacedBy":"208"},{"ruleId":"201","severity":1,"message":"209","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"210","line":9,"column":21,"nodeType":"203","messageId":"204","endLine":9,"endColumn":31},{"ruleId":"211","severity":1,"message":"212","line":28,"column":8,"nodeType":"213","endLine":28,"endColumn":10,"suggestions":"214"},{"ruleId":"201","severity":1,"message":"209","line":1,"column":17,"nodeType":"203","messageId":"204","endLine":1,"endColumn":26},{"ruleId":"201","severity":1,"message":"215","line":8,"column":17,"nodeType":"203","messageId":"204","endLine":8,"endColumn":20},{"ruleId":"201","severity":1,"message":"216","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":14},{"ruleId":"201","severity":1,"message":"217","line":30,"column":9,"nodeType":"203","messageId":"204","endLine":30,"endColumn":17},{"ruleId":"201","severity":1,"message":"218","line":31,"column":9,"nodeType":"203","messageId":"204","endLine":31,"endColumn":17},{"ruleId":"201","severity":1,"message":"219","line":36,"column":9,"nodeType":"203","messageId":"204","endLine":36,"endColumn":26},{"ruleId":"211","severity":1,"message":"220","line":57,"column":8,"nodeType":"213","endLine":57,"endColumn":10,"suggestions":"221"},{"ruleId":"195","replacedBy":"222"},{"ruleId":"197","replacedBy":"223"},{"ruleId":"224","severity":1,"message":"225","line":55,"column":31,"nodeType":"226","messageId":"227","endLine":55,"endColumn":33},{"ruleId":"224","severity":1,"message":"225","line":72,"column":31,"nodeType":"226","messageId":"227","endLine":72,"endColumn":33},{"ruleId":"201","severity":1,"message":"202","line":14,"column":12,"nodeType":"203","messageId":"204","endLine":14,"endColumn":17},{"ruleId":"201","severity":1,"message":"228","line":15,"column":19,"nodeType":"203","messageId":"204","endLine":15,"endColumn":27},{"ruleId":"211","severity":1,"message":"229","line":71,"column":8,"nodeType":"213","endLine":71,"endColumn":10,"suggestions":"230"},{"ruleId":"201","severity":1,"message":"231","line":4,"column":12,"nodeType":"203","messageId":"204","endLine":4,"endColumn":17},{"ruleId":"201","severity":1,"message":"202","line":9,"column":12,"nodeType":"203","messageId":"204","endLine":9,"endColumn":17},{"ruleId":"201","severity":1,"message":"232","line":2,"column":10,"nodeType":"203","messageId":"204","endLine":2,"endColumn":21},{"ruleId":"201","severity":1,"message":"233","line":4,"column":8,"nodeType":"203","messageId":"204","endLine":4,"endColumn":12},{"ruleId":"211","severity":1,"message":"234","line":37,"column":8,"nodeType":"213","endLine":37,"endColumn":10,"suggestions":"235"},{"ruleId":"201","severity":1,"message":"236","line":66,"column":13,"nodeType":"203","messageId":"204","endLine":66,"endColumn":21},{"ruleId":"201","severity":1,"message":"216","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":14},{"ruleId":"211","severity":1,"message":"237","line":37,"column":8,"nodeType":"213","endLine":37,"endColumn":10,"suggestions":"238"},{"ruleId":"201","severity":1,"message":"216","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":14},{"ruleId":"201","severity":1,"message":"202","line":17,"column":36,"nodeType":"203","messageId":"204","endLine":17,"endColumn":41},{"ruleId":"211","severity":1,"message":"239","line":32,"column":8,"nodeType":"213","endLine":32,"endColumn":10,"suggestions":"240"},{"ruleId":"201","severity":1,"message":"216","line":4,"column":10,"nodeType":"203","messageId":"204","endLine":4,"endColumn":14},{"ruleId":"201","severity":1,"message":"217","line":31,"column":9,"nodeType":"203","messageId":"204","endLine":31,"endColumn":17},{"ruleId":"201","severity":1,"message":"218","line":32,"column":9,"nodeType":"203","messageId":"204","endLine":32,"endColumn":17},{"ruleId":"211","severity":1,"message":"241","line":76,"column":8,"nodeType":"213","endLine":76,"endColumn":10,"suggestions":"242"},"no-native-reassign",["243"],"no-negated-in-lhs",["244"],["243"],["244"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar",["243"],["244"],["243"],["244"],"'Component' is defined but never used.","'setHistory' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: '_id' and 'token'. Either include them or remove the dependency array.","ArrayExpression",["245"],"'_id' is assigned a value but never used.","'Link' is defined but never used.","'category' is assigned a value but never used.","'shipping' is assigned a value but never used.","'redirectToProfile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'init'. Either include it or remove the dependency array.",["246"],["243"],["244"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setLimit' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit', 'loadFilteredResults', 'myFilters.filters', and 'skip'. Either include them or remove the dependency array.",["247"],"'value' is assigned a value but never used.","'getProducts' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["248"],"'getNonce' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'loadOrders' and 'loadStatusValues'. Either include them or remove the dependency array.",["249"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.userId'. Either include them or remove the dependency array.",["250"],"React Hook useEffect has missing dependencies: 'init' and 'match.params.productId'. Either include them or remove the dependency array.",["251"],"no-global-assign","no-unsafe-negation",{"desc":"252","fix":"253"},{"desc":"254","fix":"255"},{"desc":"256","fix":"257"},{"desc":"258","fix":"259"},{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},"Update the dependencies array to be: [_id, token]",{"range":"266","text":"267"},"Update the dependencies array to be: [init]",{"range":"268","text":"269"},"Update the dependencies array to be: [limit, loadFilteredResults, myFilters.filters, skip]",{"range":"270","text":"271"},"Update the dependencies array to be: [token, userId]",{"range":"272","text":"273"},"Update the dependencies array to be: [loadOrders, loadStatusValues]",{"range":"274","text":"275"},"Update the dependencies array to be: [init, match.params.userId]",{"range":"276","text":"277"},"Update the dependencies array to be: [init, match.params.productId]",{"range":"278","text":"279"},[812,814],"[_id, token]",[1367,1369],"[init]",[2129,2131],"[limit, loadFilteredResults, myFilters.filters, skip]",[1238,1240],"[token, userId]",[1034,1036],"[loadOrders, loadStatusValues]",[917,919],"[init, match.params.userId]",[2088,2090],"[init, match.params.productId]"]